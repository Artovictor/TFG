%%%%setWTToolBoxPath%%%%


close all

%mb y ndb 15MW

b = iea15MWBlade; 
% plotBlade(b,{'IEA-15'});
% plotAirfoil(b.layout.airfoili,{... 
% 'Cylinder',...
% 'SNL-FFA-W3-500',...
% 'FFA-W3-360',...
% 'FFA-W3-330b',...
% 'FFA-W3-301',...
% 'FFA-W3-270b',...
% 'FFA-W3-241',...
% 'FFA-W3-211',...
% });
ndb   = blade2ndBlade(b);
% plotNdBlade(ndb,{'IEA-15'});

% A continuación lo que hace la función iea15MWBlade:  
%%NO DESCOMENTAR%%
% R                 = 120;
% l_B               = 117;
% rH                = R - l_B;
% data              = getIEA15MWBladeGeometryFromExcelFile;
% r                 = rH + l_B*data(:,1);
% ns                = length(r);
% c                 = data(:,2);
% thetaG            = data(:,3);
% 
% y_pa              = c.*data(:,4);
% twistCenter       = [y_pa,zeros(ns,1)];
% 
% cd                = 0.35;
% p                 ={@()cylinder(cd),...
%                     @snl_ffa_w3_500_iea15,...
%                     @ffa_w3_360_iea15,...
%                     @ffa_w3_330b_iea15,...
%                     @ffa_w3_301_iea15,...
%                     @ffa_w3_270b_iea15,...
%                     @ffa_w3_241_iea15,...
%                     @ffa_w3_211_iea15,...
%                     };
% 
% x                 = r/R;
% tcLimits          = [0.98,0.4,0.34,0.31,0.28,0.26,0.211,0.19];
% tc                = data(:,8)/100;
% [airfoil,layout]  = tc2airfoilLayout(tc,x,tcLimits,p);
% 
% layout.ri = layout.xi.*R;
% 
% 
% blade = struct(...
%                'class','blade',...
%                'id','IEC15MW',...
%                'r',r,...
%                'twistCenter',twistCenter,...
%                'airfoil',{airfoil}, ...
%                'layout', layout,...
%                'c',c,...
%                'thetaG',thetaG...
%                );

%%Blade y ndb sin cilindro

close all

b_mod = iea15MWBladeMod; 
plotBlade(b_mod,{'IEA-15Mod'});
plotAirfoil(b_mod.layout.airfoili,{...
'SNL-FFA-W3-500',...
'FFA-W3-360',...
'FFA-W3-330b',...
'FFA-W3-301',...
'FFA-W3-270b',...
'FFA-W3-241',...
'FFA-W3-211',...
});
ndb_mod   = blade2ndBlade(b_mod); 
plotNdBlade(ndb_mod,{'IEA-15Mod'});

% A continuación lo que hace la función iea15MWBladeMod:  
%%NO DESCOMENTAR%%
% R                 = 120;
% l_B               = 117;
% rH                = R - l_B;
% data              = getIEA15MWBladeModGeometryFromExcelFile;
% r                 = rH + l_B*data(:,1);
% ns                = length(r);
% c                 = data(:,2);
% thetaG            = data(:,3);
% 
% y_pa              = c.*data(:,4);
% twistCenter       = [y_pa,zeros(ns,1)];
% 
% p                 ={@snl_ffa_w3_500_iea15,...
%                     @ffa_w3_360_iea15,...
%                     @ffa_w3_330b_iea15,...
%                     @ffa_w3_301_iea15,...
%                     @ffa_w3_270b_iea15,...
%                     @ffa_w3_241_iea15,...
%                     @ffa_w3_211_iea15,...
%                     };
% x                 = r/R;
% tcLimits          = [0.4,0.34,0.31,0.28,0.26,0.211,0.19];
% tc                = data(:,8)/100;
% [airfoil,layout]  = tc2airfoilLayout(tc,x,tcLimits,p);
% layout.ri = layout.xi.*R;
% 
% blade = struct(...
%                'class','blade',...
%                'id','IEC15MWMod',...
%                'r',r,...
%                'twistCenter',twistCenter,...
%                'airfoil',{airfoil}, ...
%                'layout', layout,...
%                'c',c,...
%                'thetaG',thetaG...
%                );

%Tener en cuenta que a partir de ahora si sacamos un valor interno de la
%función, estaremos sacando el valor 15MWMod y no el 15MW base.

numberofblades = 3;
lambda0 = 8;
ndOptBlade = mb2cpmaxNdBlade(numberofblades,ndb,lambda0);
plotNdBlade(ndOptBlade,'ndOptBlade',...
                'views',{[30,45]});